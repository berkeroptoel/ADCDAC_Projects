-- -------------------------------------------------------------
--
-- Module: filter14_pipe
-- Generated by MATLAB(R) 9.4 and Filter Design HDL Coder 3.1.3.
-- Generated on: 2021-04-15 15:43:21
-- -------------------------------------------------------------

-- -------------------------------------------------------------
-- HDL Code Generation Options:
--
-- TargetLanguage: VHDL
-- FIRAdderStyle: tree
-- MultiplierInputPipeline: 1
-- MultiplierOutputPipeline: 1
-- OptimizeForHDL: on
-- AddPipelineRegisters: on
-- Name: filter14_pipe
-- TestBenchStimulus: impulse step ramp chirp noise 

-- -------------------------------------------------------------
-- HDL Implementation    : Fully parallel
-- Folding Factor        : 1
-- -------------------------------------------------------------
-- Filter Settings:
--
-- Discrete-Time FIR Filter (real)
-- -------------------------------
-- Filter Structure  : Direct-Form FIR
-- Filter Length     : 21
-- Stable            : Yes
-- Linear Phase      : Yes (Type 1)
-- Arithmetic        : fixed
-- Numerator         : s16,18 -> [-1.250000e-01 1.250000e-01)
-- Input             : s13,0 -> [-4096 4096)
-- Filter Internals  : Full Precision
--   Output          : s32,18 -> [-8192 8192)  (auto determined)
--   Product         : s28,18 -> [-512 512)  (auto determined)
--   Accumulator     : s32,18 -> [-8192 8192)  (auto determined)
--   Round Mode      : No rounding
--   Overflow Mode   : No overflow
-- -------------------------------------------------------------



LIBRARY IEEE;
USE IEEE.std_logic_1164.all;
USE IEEE.numeric_std.ALL;

ENTITY filter14_pipe IS
   PORT( clk                             :   IN    std_logic; 
         clk_enable                      :   IN    std_logic; 
         reset                           :   IN    std_logic; 
         filter_in                       :   IN    std_logic_vector(12 DOWNTO 0); -- sfix13
         filter_out                      :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32_En18
         );

END filter14_pipe;


----------------------------------------------------------------
--Module Architecture: filter14_pipe
----------------------------------------------------------------
ARCHITECTURE rtl OF filter14_pipe IS
  -- Local Functions
  -- Type Definitions
  TYPE delay_pipeline_type IS ARRAY (NATURAL range <>) OF signed(12 DOWNTO 0); -- sfix13
  -- Constants
  CONSTANT coeff1                         : signed(15 DOWNTO 0) := to_signed(-5391, 16); -- sfix16_En18
  CONSTANT coeff2                         : signed(15 DOWNTO 0) := to_signed(3443, 16); -- sfix16_En18
  CONSTANT coeff3                         : signed(15 DOWNTO 0) := to_signed(5013, 16); -- sfix16_En18
  CONSTANT coeff4                         : signed(15 DOWNTO 0) := to_signed(7609, 16); -- sfix16_En18
  CONSTANT coeff5                         : signed(15 DOWNTO 0) := to_signed(10867, 16); -- sfix16_En18
  CONSTANT coeff6                         : signed(15 DOWNTO 0) := to_signed(14467, 16); -- sfix16_En18
  CONSTANT coeff7                         : signed(15 DOWNTO 0) := to_signed(18069, 16); -- sfix16_En18
  CONSTANT coeff8                         : signed(15 DOWNTO 0) := to_signed(21315, 16); -- sfix16_En18
  CONSTANT coeff9                         : signed(15 DOWNTO 0) := to_signed(23904, 16); -- sfix16_En18
  CONSTANT coeff10                        : signed(15 DOWNTO 0) := to_signed(25568, 16); -- sfix16_En18
  CONSTANT coeff11                        : signed(15 DOWNTO 0) := to_signed(26146, 16); -- sfix16_En18
  CONSTANT coeff12                        : signed(15 DOWNTO 0) := to_signed(25568, 16); -- sfix16_En18
  CONSTANT coeff13                        : signed(15 DOWNTO 0) := to_signed(23904, 16); -- sfix16_En18
  CONSTANT coeff14                        : signed(15 DOWNTO 0) := to_signed(21315, 16); -- sfix16_En18
  CONSTANT coeff15                        : signed(15 DOWNTO 0) := to_signed(18069, 16); -- sfix16_En18
  CONSTANT coeff16                        : signed(15 DOWNTO 0) := to_signed(14467, 16); -- sfix16_En18
  CONSTANT coeff17                        : signed(15 DOWNTO 0) := to_signed(10867, 16); -- sfix16_En18
  CONSTANT coeff18                        : signed(15 DOWNTO 0) := to_signed(7609, 16); -- sfix16_En18
  CONSTANT coeff19                        : signed(15 DOWNTO 0) := to_signed(5013, 16); -- sfix16_En18
  CONSTANT coeff20                        : signed(15 DOWNTO 0) := to_signed(3443, 16); -- sfix16_En18
  CONSTANT coeff21                        : signed(15 DOWNTO 0) := to_signed(-5391, 16); -- sfix16_En18

  -- Signals
  SIGNAL delay_pipeline                   : delay_pipeline_type(0 TO 20); -- sfix13
  SIGNAL product21                        : signed(27 DOWNTO 0); -- sfix28_En18
  SIGNAL delay_pipeline_20_under_pipe     : signed(12 DOWNTO 0); -- sfix13
  SIGNAL coeff21_pipe                     : signed(15 DOWNTO 0); -- sfix16_En18
  SIGNAL product21_pipe                   : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL product20                        : signed(27 DOWNTO 0); -- sfix28_En18
  SIGNAL delay_pipeline_19_under_pipe     : signed(12 DOWNTO 0); -- sfix13
  SIGNAL coeff20_pipe                     : signed(15 DOWNTO 0); -- sfix16_En18
  SIGNAL product20_pipe                   : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL product19                        : signed(27 DOWNTO 0); -- sfix28_En18
  SIGNAL delay_pipeline_18_under_pipe     : signed(12 DOWNTO 0); -- sfix13
  SIGNAL coeff19_pipe                     : signed(15 DOWNTO 0); -- sfix16_En18
  SIGNAL product19_pipe                   : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL product18                        : signed(27 DOWNTO 0); -- sfix28_En18
  SIGNAL delay_pipeline_17_under_pipe     : signed(12 DOWNTO 0); -- sfix13
  SIGNAL coeff18_pipe                     : signed(15 DOWNTO 0); -- sfix16_En18
  SIGNAL product18_pipe                   : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL product17                        : signed(27 DOWNTO 0); -- sfix28_En18
  SIGNAL delay_pipeline_16_under_pipe     : signed(12 DOWNTO 0); -- sfix13
  SIGNAL coeff17_pipe                     : signed(15 DOWNTO 0); -- sfix16_En18
  SIGNAL product17_pipe                   : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL product16                        : signed(27 DOWNTO 0); -- sfix28_En18
  SIGNAL delay_pipeline_15_under_pipe     : signed(12 DOWNTO 0); -- sfix13
  SIGNAL coeff16_pipe                     : signed(15 DOWNTO 0); -- sfix16_En18
  SIGNAL product16_pipe                   : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL product15                        : signed(27 DOWNTO 0); -- sfix28_En18
  SIGNAL delay_pipeline_14_under_pipe     : signed(12 DOWNTO 0); -- sfix13
  SIGNAL coeff15_pipe                     : signed(15 DOWNTO 0); -- sfix16_En18
  SIGNAL product15_pipe                   : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL product14                        : signed(27 DOWNTO 0); -- sfix28_En18
  SIGNAL delay_pipeline_13_under_pipe     : signed(12 DOWNTO 0); -- sfix13
  SIGNAL coeff14_pipe                     : signed(15 DOWNTO 0); -- sfix16_En18
  SIGNAL product14_pipe                   : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL product13                        : signed(27 DOWNTO 0); -- sfix28_En18
  SIGNAL delay_pipeline_12_under_pipe     : signed(12 DOWNTO 0); -- sfix13
  SIGNAL coeff13_pipe                     : signed(15 DOWNTO 0); -- sfix16_En18
  SIGNAL product13_pipe                   : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL product12                        : signed(27 DOWNTO 0); -- sfix28_En18
  SIGNAL delay_pipeline_11_under_pipe     : signed(12 DOWNTO 0); -- sfix13
  SIGNAL coeff12_pipe                     : signed(15 DOWNTO 0); -- sfix16_En18
  SIGNAL product12_pipe                   : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL product11                        : signed(27 DOWNTO 0); -- sfix28_En18
  SIGNAL delay_pipeline_10_under_pipe     : signed(12 DOWNTO 0); -- sfix13
  SIGNAL coeff11_pipe                     : signed(15 DOWNTO 0); -- sfix16_En18
  SIGNAL product11_pipe                   : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL product10                        : signed(27 DOWNTO 0); -- sfix28_En18
  SIGNAL delay_pipeline_9_under_pipe      : signed(12 DOWNTO 0); -- sfix13
  SIGNAL coeff10_pipe                     : signed(15 DOWNTO 0); -- sfix16_En18
  SIGNAL product10_pipe                   : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL product9                         : signed(27 DOWNTO 0); -- sfix28_En18
  SIGNAL delay_pipeline_8_under_pipe      : signed(12 DOWNTO 0); -- sfix13
  SIGNAL coeff9_pipe                      : signed(15 DOWNTO 0); -- sfix16_En18
  SIGNAL product9_pipe                    : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL product8                         : signed(27 DOWNTO 0); -- sfix28_En18
  SIGNAL delay_pipeline_7_under_pipe      : signed(12 DOWNTO 0); -- sfix13
  SIGNAL coeff8_pipe                      : signed(15 DOWNTO 0); -- sfix16_En18
  SIGNAL product8_pipe                    : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL product7                         : signed(27 DOWNTO 0); -- sfix28_En18
  SIGNAL delay_pipeline_6_under_pipe      : signed(12 DOWNTO 0); -- sfix13
  SIGNAL coeff7_pipe                      : signed(15 DOWNTO 0); -- sfix16_En18
  SIGNAL product7_pipe                    : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL product6                         : signed(27 DOWNTO 0); -- sfix28_En18
  SIGNAL delay_pipeline_5_under_pipe      : signed(12 DOWNTO 0); -- sfix13
  SIGNAL coeff6_pipe                      : signed(15 DOWNTO 0); -- sfix16_En18
  SIGNAL product6_pipe                    : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL product5                         : signed(27 DOWNTO 0); -- sfix28_En18
  SIGNAL delay_pipeline_4_under_pipe      : signed(12 DOWNTO 0); -- sfix13
  SIGNAL coeff5_pipe                      : signed(15 DOWNTO 0); -- sfix16_En18
  SIGNAL product5_pipe                    : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL product4                         : signed(27 DOWNTO 0); -- sfix28_En18
  SIGNAL delay_pipeline_3_under_pipe      : signed(12 DOWNTO 0); -- sfix13
  SIGNAL coeff4_pipe                      : signed(15 DOWNTO 0); -- sfix16_En18
  SIGNAL product4_pipe                    : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL product3                         : signed(27 DOWNTO 0); -- sfix28_En18
  SIGNAL delay_pipeline_2_under_pipe      : signed(12 DOWNTO 0); -- sfix13
  SIGNAL coeff3_pipe                      : signed(15 DOWNTO 0); -- sfix16_En18
  SIGNAL product3_pipe                    : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL product2                         : signed(27 DOWNTO 0); -- sfix28_En18
  SIGNAL delay_pipeline_1_under_pipe      : signed(12 DOWNTO 0); -- sfix13
  SIGNAL coeff2_pipe                      : signed(15 DOWNTO 0); -- sfix16_En18
  SIGNAL product2_pipe                    : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL product1                         : signed(27 DOWNTO 0); -- sfix28_En18
  SIGNAL delay_pipeline_0_under_pipe      : signed(12 DOWNTO 0); -- sfix13
  SIGNAL coeff1_pipe                      : signed(15 DOWNTO 0); -- sfix16_En18
  SIGNAL product1_pipe                    : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL sum_final                        : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL sum1_1                           : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL add_temp                         : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL sumpipe1_1                       : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL sum1_2                           : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL add_temp_1                       : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL sumpipe1_2                       : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL sum1_3                           : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL add_temp_2                       : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL sumpipe1_3                       : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL sum1_4                           : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL add_temp_3                       : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL sumpipe1_4                       : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL sum1_5                           : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL add_temp_4                       : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL sumpipe1_5                       : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL sum1_6                           : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL add_temp_5                       : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL sumpipe1_6                       : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL sum1_7                           : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL add_temp_6                       : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL sumpipe1_7                       : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL sum1_8                           : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL add_temp_7                       : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL sumpipe1_8                       : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL sum1_9                           : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL add_temp_8                       : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL sumpipe1_9                       : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL sum1_10                          : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL add_temp_9                       : signed(28 DOWNTO 0); -- sfix29_En18
  SIGNAL sumpipe1_10                      : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL sumpipe1_11                      : signed(27 DOWNTO 0); -- sfix28_En18
  SIGNAL sum2_1                           : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL add_temp_10                      : signed(32 DOWNTO 0); -- sfix33_En18
  SIGNAL sumpipe2_1                       : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL sum2_2                           : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL add_temp_11                      : signed(32 DOWNTO 0); -- sfix33_En18
  SIGNAL sumpipe2_2                       : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL sum2_3                           : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL add_temp_12                      : signed(32 DOWNTO 0); -- sfix33_En18
  SIGNAL sumpipe2_3                       : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL sum2_4                           : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL add_temp_13                      : signed(32 DOWNTO 0); -- sfix33_En18
  SIGNAL sumpipe2_4                       : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL sum2_5                           : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL add_temp_14                      : signed(32 DOWNTO 0); -- sfix33_En18
  SIGNAL sumpipe2_5                       : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL sumpipe2_6                       : signed(27 DOWNTO 0); -- sfix28_En18
  SIGNAL sum3_1                           : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL add_temp_15                      : signed(32 DOWNTO 0); -- sfix33_En18
  SIGNAL sumpipe3_1                       : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL sum3_2                           : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL add_temp_16                      : signed(32 DOWNTO 0); -- sfix33_En18
  SIGNAL sumpipe3_2                       : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL sum3_3                           : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL add_temp_17                      : signed(32 DOWNTO 0); -- sfix33_En18
  SIGNAL sumpipe3_3                       : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL sum4_1                           : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL add_temp_18                      : signed(32 DOWNTO 0); -- sfix33_En18
  SIGNAL sumpipe4_1                       : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL sumpipe4_2                       : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL sum5_1                           : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL add_temp_19                      : signed(32 DOWNTO 0); -- sfix33_En18
  SIGNAL sumpipe5_1                       : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL output_typeconvert               : signed(31 DOWNTO 0); -- sfix32_En18
  SIGNAL output_register                  : signed(31 DOWNTO 0); -- sfix32_En18


BEGIN

  -- Block Statements
  Delay_Pipeline_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline(0 TO 20) <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline(0) <= signed(filter_in);
        delay_pipeline(1 TO 20) <= delay_pipeline(0 TO 19);
      END IF;
    END IF; 
  END PROCESS Delay_Pipeline_process;

  temp_process1 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_20_under_pipe <= (OTHERS => '0');
      coeff21_pipe <= (OTHERS => '0');
      product21_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_20_under_pipe <= delay_pipeline(20);
        coeff21_pipe <= coeff21;

        product21_pipe <= delay_pipeline_20_under_pipe * coeff21_pipe;

      END IF;
    END IF;
  END PROCESS temp_process1;

  product21 <= product21_pipe(27 DOWNTO 0);

  temp_process2 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_19_under_pipe <= (OTHERS => '0');
      coeff20_pipe <= (OTHERS => '0');
      product20_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_19_under_pipe <= delay_pipeline(19);
        coeff20_pipe <= coeff20;

        product20_pipe <= delay_pipeline_19_under_pipe * coeff20_pipe;

      END IF;
    END IF;
  END PROCESS temp_process2;

  product20 <= product20_pipe(27 DOWNTO 0);

  temp_process3 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_18_under_pipe <= (OTHERS => '0');
      coeff19_pipe <= (OTHERS => '0');
      product19_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_18_under_pipe <= delay_pipeline(18);
        coeff19_pipe <= coeff19;

        product19_pipe <= delay_pipeline_18_under_pipe * coeff19_pipe;

      END IF;
    END IF;
  END PROCESS temp_process3;

  product19 <= product19_pipe(27 DOWNTO 0);

  temp_process4 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_17_under_pipe <= (OTHERS => '0');
      coeff18_pipe <= (OTHERS => '0');
      product18_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_17_under_pipe <= delay_pipeline(17);
        coeff18_pipe <= coeff18;

        product18_pipe <= delay_pipeline_17_under_pipe * coeff18_pipe;

      END IF;
    END IF;
  END PROCESS temp_process4;

  product18 <= product18_pipe(27 DOWNTO 0);

  temp_process5 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_16_under_pipe <= (OTHERS => '0');
      coeff17_pipe <= (OTHERS => '0');
      product17_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_16_under_pipe <= delay_pipeline(16);
        coeff17_pipe <= coeff17;

        product17_pipe <= delay_pipeline_16_under_pipe * coeff17_pipe;

      END IF;
    END IF;
  END PROCESS temp_process5;

  product17 <= product17_pipe(27 DOWNTO 0);

  temp_process6 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_15_under_pipe <= (OTHERS => '0');
      coeff16_pipe <= (OTHERS => '0');
      product16_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_15_under_pipe <= delay_pipeline(15);
        coeff16_pipe <= coeff16;

        product16_pipe <= delay_pipeline_15_under_pipe * coeff16_pipe;

      END IF;
    END IF;
  END PROCESS temp_process6;

  product16 <= product16_pipe(27 DOWNTO 0);

  temp_process7 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_14_under_pipe <= (OTHERS => '0');
      coeff15_pipe <= (OTHERS => '0');
      product15_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_14_under_pipe <= delay_pipeline(14);
        coeff15_pipe <= coeff15;

        product15_pipe <= delay_pipeline_14_under_pipe * coeff15_pipe;

      END IF;
    END IF;
  END PROCESS temp_process7;

  product15 <= product15_pipe(27 DOWNTO 0);

  temp_process8 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_13_under_pipe <= (OTHERS => '0');
      coeff14_pipe <= (OTHERS => '0');
      product14_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_13_under_pipe <= delay_pipeline(13);
        coeff14_pipe <= coeff14;

        product14_pipe <= delay_pipeline_13_under_pipe * coeff14_pipe;

      END IF;
    END IF;
  END PROCESS temp_process8;

  product14 <= product14_pipe(27 DOWNTO 0);

  temp_process9 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_12_under_pipe <= (OTHERS => '0');
      coeff13_pipe <= (OTHERS => '0');
      product13_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_12_under_pipe <= delay_pipeline(12);
        coeff13_pipe <= coeff13;

        product13_pipe <= delay_pipeline_12_under_pipe * coeff13_pipe;

      END IF;
    END IF;
  END PROCESS temp_process9;

  product13 <= product13_pipe(27 DOWNTO 0);

  temp_process10 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_11_under_pipe <= (OTHERS => '0');
      coeff12_pipe <= (OTHERS => '0');
      product12_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_11_under_pipe <= delay_pipeline(11);
        coeff12_pipe <= coeff12;

        product12_pipe <= delay_pipeline_11_under_pipe * coeff12_pipe;

      END IF;
    END IF;
  END PROCESS temp_process10;

  product12 <= product12_pipe(27 DOWNTO 0);

  temp_process11 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_10_under_pipe <= (OTHERS => '0');
      coeff11_pipe <= (OTHERS => '0');
      product11_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_10_under_pipe <= delay_pipeline(10);
        coeff11_pipe <= coeff11;

        product11_pipe <= delay_pipeline_10_under_pipe * coeff11_pipe;

      END IF;
    END IF;
  END PROCESS temp_process11;

  product11 <= product11_pipe(27 DOWNTO 0);

  temp_process12 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_9_under_pipe <= (OTHERS => '0');
      coeff10_pipe <= (OTHERS => '0');
      product10_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_9_under_pipe <= delay_pipeline(9);
        coeff10_pipe <= coeff10;

        product10_pipe <= delay_pipeline_9_under_pipe * coeff10_pipe;

      END IF;
    END IF;
  END PROCESS temp_process12;

  product10 <= product10_pipe(27 DOWNTO 0);

  temp_process13 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_8_under_pipe <= (OTHERS => '0');
      coeff9_pipe <= (OTHERS => '0');
      product9_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_8_under_pipe <= delay_pipeline(8);
        coeff9_pipe <= coeff9;

        product9_pipe <= delay_pipeline_8_under_pipe * coeff9_pipe;

      END IF;
    END IF;
  END PROCESS temp_process13;

  product9 <= product9_pipe(27 DOWNTO 0);

  temp_process14 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_7_under_pipe <= (OTHERS => '0');
      coeff8_pipe <= (OTHERS => '0');
      product8_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_7_under_pipe <= delay_pipeline(7);
        coeff8_pipe <= coeff8;

        product8_pipe <= delay_pipeline_7_under_pipe * coeff8_pipe;

      END IF;
    END IF;
  END PROCESS temp_process14;

  product8 <= product8_pipe(27 DOWNTO 0);

  temp_process15 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_6_under_pipe <= (OTHERS => '0');
      coeff7_pipe <= (OTHERS => '0');
      product7_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_6_under_pipe <= delay_pipeline(6);
        coeff7_pipe <= coeff7;

        product7_pipe <= delay_pipeline_6_under_pipe * coeff7_pipe;

      END IF;
    END IF;
  END PROCESS temp_process15;

  product7 <= product7_pipe(27 DOWNTO 0);

  temp_process16 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_5_under_pipe <= (OTHERS => '0');
      coeff6_pipe <= (OTHERS => '0');
      product6_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_5_under_pipe <= delay_pipeline(5);
        coeff6_pipe <= coeff6;

        product6_pipe <= delay_pipeline_5_under_pipe * coeff6_pipe;

      END IF;
    END IF;
  END PROCESS temp_process16;

  product6 <= product6_pipe(27 DOWNTO 0);

  temp_process17 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_4_under_pipe <= (OTHERS => '0');
      coeff5_pipe <= (OTHERS => '0');
      product5_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_4_under_pipe <= delay_pipeline(4);
        coeff5_pipe <= coeff5;

        product5_pipe <= delay_pipeline_4_under_pipe * coeff5_pipe;

      END IF;
    END IF;
  END PROCESS temp_process17;

  product5 <= product5_pipe(27 DOWNTO 0);

  temp_process18 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_3_under_pipe <= (OTHERS => '0');
      coeff4_pipe <= (OTHERS => '0');
      product4_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_3_under_pipe <= delay_pipeline(3);
        coeff4_pipe <= coeff4;

        product4_pipe <= delay_pipeline_3_under_pipe * coeff4_pipe;

      END IF;
    END IF;
  END PROCESS temp_process18;

  product4 <= product4_pipe(27 DOWNTO 0);

  temp_process19 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_2_under_pipe <= (OTHERS => '0');
      coeff3_pipe <= (OTHERS => '0');
      product3_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_2_under_pipe <= delay_pipeline(2);
        coeff3_pipe <= coeff3;

        product3_pipe <= delay_pipeline_2_under_pipe * coeff3_pipe;

      END IF;
    END IF;
  END PROCESS temp_process19;

  product3 <= product3_pipe(27 DOWNTO 0);

  temp_process20 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_1_under_pipe <= (OTHERS => '0');
      coeff2_pipe <= (OTHERS => '0');
      product2_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_1_under_pipe <= delay_pipeline(1);
        coeff2_pipe <= coeff2;

        product2_pipe <= delay_pipeline_1_under_pipe * coeff2_pipe;

      END IF;
    END IF;
  END PROCESS temp_process20;

  product2 <= product2_pipe(27 DOWNTO 0);

  temp_process21 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline_0_under_pipe <= (OTHERS => '0');
      coeff1_pipe <= (OTHERS => '0');
      product1_pipe <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline_0_under_pipe <= delay_pipeline(0);
        coeff1_pipe <= coeff1;

        product1_pipe <= delay_pipeline_0_under_pipe * coeff1_pipe;

      END IF;
    END IF;
  END PROCESS temp_process21;

  product1 <= product1_pipe(27 DOWNTO 0);

  add_temp <= resize(product21, 29) + resize(product20, 29);
  sum1_1 <= resize(add_temp, 32);

  add_temp_1 <= resize(product19, 29) + resize(product18, 29);
  sum1_2 <= resize(add_temp_1, 32);

  add_temp_2 <= resize(product17, 29) + resize(product16, 29);
  sum1_3 <= resize(add_temp_2, 32);

  add_temp_3 <= resize(product15, 29) + resize(product14, 29);
  sum1_4 <= resize(add_temp_3, 32);

  add_temp_4 <= resize(product13, 29) + resize(product12, 29);
  sum1_5 <= resize(add_temp_4, 32);

  add_temp_5 <= resize(product11, 29) + resize(product10, 29);
  sum1_6 <= resize(add_temp_5, 32);

  add_temp_6 <= resize(product9, 29) + resize(product8, 29);
  sum1_7 <= resize(add_temp_6, 32);

  add_temp_7 <= resize(product7, 29) + resize(product6, 29);
  sum1_8 <= resize(add_temp_7, 32);

  add_temp_8 <= resize(product5, 29) + resize(product4, 29);
  sum1_9 <= resize(add_temp_8, 32);

  add_temp_9 <= resize(product3, 29) + resize(product2, 29);
  sum1_10 <= resize(add_temp_9, 32);

  temp_process22 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sumpipe1_1 <= (OTHERS => '0');
      sumpipe1_2 <= (OTHERS => '0');
      sumpipe1_3 <= (OTHERS => '0');
      sumpipe1_4 <= (OTHERS => '0');
      sumpipe1_5 <= (OTHERS => '0');
      sumpipe1_6 <= (OTHERS => '0');
      sumpipe1_7 <= (OTHERS => '0');
      sumpipe1_8 <= (OTHERS => '0');
      sumpipe1_9 <= (OTHERS => '0');
      sumpipe1_10 <= (OTHERS => '0');
      sumpipe1_11 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        sumpipe1_1 <= sum1_1;
        sumpipe1_2 <= sum1_2;
        sumpipe1_3 <= sum1_3;
        sumpipe1_4 <= sum1_4;
        sumpipe1_5 <= sum1_5;
        sumpipe1_6 <= sum1_6;
        sumpipe1_7 <= sum1_7;
        sumpipe1_8 <= sum1_8;
        sumpipe1_9 <= sum1_9;
        sumpipe1_10 <= sum1_10;
        sumpipe1_11 <= product1;
      END IF;
    END IF; 
  END PROCESS temp_process22;

  add_temp_10 <= resize(sumpipe1_1, 33) + resize(sumpipe1_2, 33);
  sum2_1 <= add_temp_10(31 DOWNTO 0);

  add_temp_11 <= resize(sumpipe1_3, 33) + resize(sumpipe1_4, 33);
  sum2_2 <= add_temp_11(31 DOWNTO 0);

  add_temp_12 <= resize(sumpipe1_5, 33) + resize(sumpipe1_6, 33);
  sum2_3 <= add_temp_12(31 DOWNTO 0);

  add_temp_13 <= resize(sumpipe1_7, 33) + resize(sumpipe1_8, 33);
  sum2_4 <= add_temp_13(31 DOWNTO 0);

  add_temp_14 <= resize(sumpipe1_9, 33) + resize(sumpipe1_10, 33);
  sum2_5 <= add_temp_14(31 DOWNTO 0);

  temp_process23 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sumpipe2_1 <= (OTHERS => '0');
      sumpipe2_2 <= (OTHERS => '0');
      sumpipe2_3 <= (OTHERS => '0');
      sumpipe2_4 <= (OTHERS => '0');
      sumpipe2_5 <= (OTHERS => '0');
      sumpipe2_6 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        sumpipe2_1 <= sum2_1;
        sumpipe2_2 <= sum2_2;
        sumpipe2_3 <= sum2_3;
        sumpipe2_4 <= sum2_4;
        sumpipe2_5 <= sum2_5;
        sumpipe2_6 <= sumpipe1_11;
      END IF;
    END IF; 
  END PROCESS temp_process23;

  add_temp_15 <= resize(sumpipe2_1, 33) + resize(sumpipe2_2, 33);
  sum3_1 <= add_temp_15(31 DOWNTO 0);

  add_temp_16 <= resize(sumpipe2_3, 33) + resize(sumpipe2_4, 33);
  sum3_2 <= add_temp_16(31 DOWNTO 0);

  add_temp_17 <= resize(sumpipe2_5, 33) + resize(sumpipe2_6, 33);
  sum3_3 <= add_temp_17(31 DOWNTO 0);

  temp_process24 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sumpipe3_1 <= (OTHERS => '0');
      sumpipe3_2 <= (OTHERS => '0');
      sumpipe3_3 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        sumpipe3_1 <= sum3_1;
        sumpipe3_2 <= sum3_2;
        sumpipe3_3 <= sum3_3;
      END IF;
    END IF; 
  END PROCESS temp_process24;

  add_temp_18 <= resize(sumpipe3_1, 33) + resize(sumpipe3_2, 33);
  sum4_1 <= add_temp_18(31 DOWNTO 0);

  temp_process25 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sumpipe4_1 <= (OTHERS => '0');
      sumpipe4_2 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        sumpipe4_1 <= sum4_1;
        sumpipe4_2 <= sumpipe3_3;
      END IF;
    END IF; 
  END PROCESS temp_process25;

  add_temp_19 <= resize(sumpipe4_1, 33) + resize(sumpipe4_2, 33);
  sum5_1 <= add_temp_19(31 DOWNTO 0);

  temp_process26 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sumpipe5_1 <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        sumpipe5_1 <= sum5_1;
      END IF;
    END IF; 
  END PROCESS temp_process26;

  sum_final <= sumpipe5_1;

  output_typeconvert <= sum_final;

  Output_Register_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      output_register <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        output_register <= output_typeconvert;
      END IF;
    END IF; 
  END PROCESS Output_Register_process;

  -- Assignment Statements
  filter_out <= std_logic_vector(output_register);
END rtl;
