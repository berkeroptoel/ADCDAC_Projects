-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\taylor_sine\div1.vhd
-- Created: 2021-02-11 11:55:53
-- 
-- Generated by MATLAB 9.4 and HDL Coder 3.12
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 0.1
-- Target subsystem base rate: 0.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: div1
-- Source Path: taylor_sine/div1
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY div_calc IS
  PORT( In1                               :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En15
        In2                               :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
        Out1                              :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32_En15
        );
END div_calc;


ARCHITECTURE rtl OF div_calc IS

  -- Signals
  SIGNAL In1_signed                       : signed(31 DOWNTO 0);  -- sfix32_En15
  SIGNAL In2_unsigned                     : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Divide_out1                      : signed(31 DOWNTO 0);  -- sfix32_En15

BEGIN
  In1_signed <= signed(In1);

  In2_unsigned <= unsigned(In2);

  Divide_output : PROCESS (In1_signed, In2_unsigned)
    VARIABLE div_temp : signed(32 DOWNTO 0);
    VARIABLE cast : signed(32 DOWNTO 0);
    VARIABLE cast_0 : signed(16 DOWNTO 0);
  BEGIN
    IF In2_unsigned = to_unsigned(16#0000#, 16) THEN 
      IF In1_signed < to_signed(0, 32) THEN 
        Divide_out1 <= signed'(X"80000000");
      ELSE 
        Divide_out1 <= to_signed(2147483647, 32);
      END IF;
    ELSE 
      cast := resize(In1_signed, 33);
      cast_0 := signed(resize(In2_unsigned, 17));
      div_temp := cast / cast_0;
      IF (div_temp(32) = '0') AND (div_temp(31) /= '0') THEN 
        Divide_out1 <= X"7FFFFFFF";
      ELSIF (div_temp(32) = '1') AND (div_temp(31) /= '1') THEN 
        Divide_out1 <= X"80000000";
      ELSE 
        Divide_out1 <= div_temp(31 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS Divide_output;


  Out1 <= std_logic_vector(Divide_out1);

END rtl;

